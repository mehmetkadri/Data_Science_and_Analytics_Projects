movie_df <- as_tibble(select(movies,ID,Title,Year,Age,IMDb,Rotten.Tomatoes,Platform,Directors,Genres,Country,Language,Runtime))
movie_df
movies
movie_df
> movie_df <-as_tibble(select(movies, Title, Year, Age, IMDb, Rotten.Tomatoes, Platform, Genres, Country, Language, Runtime))
movie_df <-as_tibble(select(movies, Title, Year, Age, IMDb, Rotten.Tomatoes, Platform, Genres, Country, Language, Runtime))
movie_df %>%
separate(IMDb, into = c("IMDb(out of 10)", "will_be_deleted"), sep = "/")
movie_df
movie_df %>%
mutate(IMDb=ifelse(is.na(IMDb), paste0(NA,"/", NA), IMDb)) %>%
separate(IMDb, into = c("IMDb(out of 10)", "will_be_deleted"), sep = "/")
movie_df %>%
mutate(IMDb=ifelse(is.na(IMDb), paste0(NA,"-", NA), IMDb)) %>%
separate(IMDb, into = c("IMDb(out of 10)", "will_be_deleted"), sep = "/")
movie_df %>%
mutate(IMDb=ifelse(is.na(IMDb), paste0(NA,"-", NA), IMDb)) %>%
separate(IMDb, into = c("IMDb(out of 10)", "will_be_deleted"))
movie_df %>%
separate(IMDb, into = c("IMDb(out of 10)", "will_be_deleted"), sep = "/", extra = "drop")
movie_df %>%
separate(IMDb, into = c("IMDb(out of 10)", "will_be_deleted"), sep = "/", na.rm = TRUE)
movie_df <- filter(movie_df, na.rm = TRUE)
movie_df <- filter(movie_df, !(IMDb==NA))
movie_df
movie_df <-as_tibble(select(movies, Title, Year, Age, IMDb, Rotten.Tomatoes, Platform, Genres, Country, Language, Runtime))
movie_df <- filter(movie_df, (IMDb==NA))
movie_df <-as_tibble(select(movies, Title, Year, Age, IMDb, Rotten.Tomatoes, Platform, Genres, Country, Language, Runtime))
movie_df <- filter(movie_df, (IMDb!=NA))
movie_df <-as_tibble(select(movies, Title, Year, Age, IMDb, Rotten.Tomatoes, Platform, Genres, Country, Language, Runtime))
movie_df <- filter(movie_df, (IMDb!='NA'))
movie_df
View
View(movie_df)
movie_df <- filter(movie_df, (IMDb!=''))
movie_df %>%
separate(IMDb, into = c("IMDb(out of 10)", "will_be_deleted"), sep = "/")
movie_df <- movie_df %>%
separate(IMDb, into = c("IMDb(out of 10)", "will_be_deleted"), sep = "/")
movie_df <- filter(movie_df, (Rotten.Tomatoes!=''))
movie_df <- movie_df %>%
separate(Rotten.Tomatoes, into = c("Rotten.Tomatoes(out of 100)", "will_be_deleted"), sep = "/")
movies <- subset( movies, select = -will_be_deleted )
movies <- subset( movie_df, select = -will_be_deleted )
movie_df <- subset( movie_df, select = -will_be_deleted )
movies <- read.csv(data/MoviesOnStreamingPlatforms_updated.csv)
movies <- read.csv("data/MoviesOnStreamingPlatforms_updated.csv")
movies$Platform="NotDetermined"
for (platformColumn in 8:11) {
+     for (i in 1:rowCount) {
+         if (movies[i,platformColumn]==1) {
+             movies[i,18]=colnames(movies[platformColumn])
+         }
+     }
+ }
for (platformColumn in 8:11) {
+     for (i in 1:rowCount) {
+         if (movies[i,platformColumn]==1) {
+             movies[i,18]=colnames(movies[platformColumn])
+         }
+     }
+ }
for (platformColumn in 8:11) {
for (i in 1:rowCount) {
if (movies[i,platformColumn]==1) {
movies[i,18]=colnames(movies[platformColumn])
}
}
}
movies <- subset( movies, select = -Netflix )
movies <- subset( movies, select = -Hulu )
movies <- subset( movies, select = -Prime.Video )
movies <- subset( movies, select = -Disney. )
movies <- subset( movies, select = -X )
movies <- subset( movies, select = -Type )
movie_df <-as_tibble(select(movies, Title, Year, Age, IMDb, Rotten.Tomatoes, Platform, Genres, Country, Language, Runtime))
movie_df <- filter(movie_df, (IMDb!=''))
movie_df <- movie_df %>%
+     separate(IMDb, into = c("IMDb(out of 10)", "imdb_will_be_deleted"), sep = "/")
movie_df <- movie_df %>%
+     separate(movie_df, IMDb, into = c("IMDb(out of 10)", "imdb_will_be_deleted"), sep = "/")
movie_df <- movie_df %>%
+separate(movie_df, IMDb, into = c("IMDb(out of 10)", "imdb_will_be_deleted"), sep = "/")
View(movie_df)
View(movie_df)
movie_df <- movie_df %>%
+separate(IMDb, into = c("IMDb(out of 10)", "imdb_will_be_deleted"), sep = "/")
movie_df <- movie_df %>%
+separate("IMDb", into = c("IMDb(out of 10)", "imdb_will_be_deleted"), sep = "/")
movie_df %>%
separate(IMDb, into = c("IMDb(out of 10)", "will_be_deleted"), sep = "/")
View(movie_df)
movie_df <- movie_df %>%
separate("IMDb", into = c("IMDb(out of 10)", "imdb_will_be_deleted"), sep = "/")
movie_df <- filter(movie_df, (Rotten.Tomatoes!=''))
movie_df <- movie_df %>%
separate(Rotten.Tomatoes, into = c("Rotten.Tomatoes (out of 100)", "Rotten.Tomatoes_will_be_deleted") , sep = "/")
Movie_df <- subset( movies, select = - imdb_will_be_deleted )
Movie_df <- subset( movies, select = - Rotten.Tomatoes_will_be_deleted )
Movie_df <- subset( movies, select = - imdb_will_be_deleted )
Movie_df <- subset( movies, select = -imdb_will_be_deleted )
Movie_df <- subset( movies, select = -imdb_will_be_deleted)
Movie_df <- subset( Movie_df, select = - imdb_will_be_deleted )
Movie_df <- subset( Movie_df, select = - Rotten.Tomatoes_will_be_deleted )
movie_df  <- subset( movie_df , select = - imdb_will_be_deleted )
movie_df  <- subset( movie_df , select = - Rotten.Tomatoes_will_be_deleted )
movie_df <-as_tibble(select(movies, Title, Year, Age, IMDb, Rotten.Tomatoes, Platform, Genres, Country, Language, Runtime))
movie_df <- filter(movie_df, (IMDb!=''))
movie_df <- movie_df %>%
separate(IMDb, into = c("IMDb(out of 10)", "imdb_will_be_deleted"), sep = "/", convert = TRUE)
movie_df <- filter(movie_df, (Rotten.Tomatoes!=''))
movie_df <- movie_df %>%
separate(Rotten.Tomatoes, into = c("Rotten.Tomatoes (out of 100)", "Rotten.Tomatoes_will_be_deleted") , sep = "/", convert = TRUE)
movie_df <- subset( movie_df, select = - imdb_will_be_deleted )
movie_df <- subset( movie_df, select = - Rotten.Tomatoes_will_be_deleted )
movies_ordered_acording_to_watchability <- movie_df %>%
mutate(watchability_ratings = IMDb(out of 10) + Rotten.Tomatoes (out of 100)) %>%
arrange(desc(watchability_ratings))
movies_ordered_acording_to_watchability <- movie_df %>%
mutate(watchability_ratings = IMDb(out of 10) + Rotten.Tomatoes (out of 100)) %>%
arrange(desc(watchability_ratings))
movies_ordered_acording_to_watchability <- movie_df %>%
mutate(watchability_ratings = "IMDb(out of 10)" + "Rotten.Tomatoes (out of 100)") %>%
arrange(desc(watchability_ratings))
movie_df %>%
mutate(watchability_ratings = IMDb(out of 10) + Rotten.Tomatoes (out of 100)) %>%
arrange(desc(watchability_ratings))
movies_ordered_acording_to_watchability <- movie_df %>%
mutate(watchability_ratings = IMDb(out of 10) + Rotten.Tomatoes (out of 100)) %>%
arrange(desc(watchability_ratings))
ggplot(movie_df) +
geom_bar(mapping=aes(x = Platform, fill= type1))
ggplot(movie_df) +
geom_bar(mapping=aes(x = Platform, fill= Age))
ggplot(movie_df) +
geom_bar(mapping=aes(x = Platform, fill= Age),orientation = dodge)
ggplot(movie_df) +
geom_bar(mapping=aes(x = Platform, fill= Age),orientation = "dodge")
ggplot(movie_df) +
geom_bar(mapping=aes(x = Platform, fill= Age),location = "dodge")
ggplot(movie_df) +
geom_bar(mapping=aes(x = Title, fill= Platform))
ggplot(movie_df) +
geom_bar(mapping=aes(x = Platform, fill= Age),position = "dodge")
ggplot(movie_df) +
geom_bar(mapping=aes(x = Platform, fill= Age),position = "dodge")
ggplot(movie_df,na.rm = TRUE) +
geom_bar(mapping=aes(x = Platform, fill= Age),position = "dodge")
ggplot(filter(movie_df, Age!="")) +
geom_bar(mapping=aes(x = Platform, fill= Age),position = "dodge")
ggplot(movie_df) +
geom_bar(mapping=aes(x = IMDb(out of 10), y = Rotten.Tomatoes(out of 100), fill= Platform),position = "dodge")
names(movie_df)[4] <- 'IMDb'
names(movie_df)[5] <- 'RottenTomatoes'
ggplot(movie_df) +
geom_bar(mapping=aes(x = IMDb, y = RottenTomatoes, fill= Platform),position = "dodge")
rlang::last_error()
ggplot(movie_df) +
geom_bar(mapping=aes(x = IMDb, y = RottenTomatoes, fill= Platform))
ggplot(movie_df, aes(x=IMDb, y= RottenTomatoes)) + geom_bar(stat='identity')
ggplot(movie_df) +
geom_bar(mapping=aes(x = IMDb, fill= Platform),position = "dodge")
ggplot(movie_df) +
geom_bar(mapping=aes(x = IMDb+RottenTomatoes, fill= Platform),position = "dodge")
ggplot(movie_df) +
geom_bar(mapping=aes(x = IMDb+RottenTomatoes, fill= Platform),position = "dodge")+
labs(title = "Fuel efficiency generally decreases with engine size")
ggplot(movie_df) +
geom_bar(mapping=aes(x = IMDb+RottenTomatoes, fill= Platform),position = "dodge")+
labs(title = "Total Ratings Of Movies Made by Different Platforms")
ggplot(movie_df) +
geom_bar(mapping=aes(x = IMDb+RottenTomatoes, fill= Platform),position = "dodge")+
labs(
x = "IMDb Rating + Rotten Tomatoes Rating",
y = "Movie Count",
title = "Total Ratings Of Movies Made by Different Platforms")
ggplot(filter(movie_df, IMDb>6 & RottenTomatoes>65)) +
geom_bar(mapping=aes(x = IMDb+RottenTomatoes, fill= Platform),position = "dodge")+
labs(
x = "IMDb Rating + Rotten Tomatoes Rating",
y = "Movie Count",
title = "Total Ratings Of Movies Made by Different Platforms")
ggplot(movie_df) +
geom_bar(mapping=aes(x = IMDb+RottenTomatoes, fill= Platform),position = "dodge")+
labs(
x = "IMDb Rating + Rotten Tomatoes Rating",
y = "Movie Count",
title = "Total Ratings Of Movies Made by Different Platforms")
ggplot(filter(movie_df, IMDb>6 & RottenTomatoes>65)) +
geom_bar(mapping=aes(x = IMDb+RottenTomatoes, fill= Platform),position = "dodge")+
labs(
x = "IMDb Rating + Rotten Tomatoes Rating",
y = "Movie Count",
title = "Total Ratings Of Movies Made by Different Platforms")
ggplot(movie_df) +
geom_point(mapping=aes(x = IMDb, y = RottenTomatoes, color= Platform))
ggplot(movie_dfg) +
geom_point(mapping=aes(x = IMDb, y = RottenTomatoes) +
facet_wrap(~ Platform, nrow = 2)
ggplot(movie_df) + +     geom_point(mapping=aes(x = IMDb, y = RottenTomatoes) +
+     facet_wrap(~ Platform, nrow = 2)
ggplot(movie_df) +
geom_point(mapping=aes(x = IMDb, y = RottenTomatoes) +
facet_wrap(~ Platform, nrow = 2)
ggplot(movie_df) +
geom_point(mapping=aes(x = year, y = RottenTomatoes, color= Platform))
ggplot(movie_df) +
geom_point(mapping=aes(x = Year, y = RottenTomatoes, color= Platform))
ggplot(movie_df) +
geom_point(mapping=aes(x = Year, y = IMDb, color= Platform))
ggplot(filter(movie_df, year==2021)) +
geom_point(mapping=aes(x = IMDb, y = RottenTomatoes, color= Platform))
ggplot(filter(movie_df, Year==2021)) +
geom_point(mapping=aes(x = IMDb, y = RottenTomatoes, color= Platform))
ggplot(movie_df) +
geom_point(mapping=aes(x = IMDb, y = RottenTomatoes) +
facet_wrap(~ Platform, nrow = 2)
ggplot(filter(movie_df, IMDb>6 & RottenTomatoes>65)) +
geom_bar(mapping=aes(x = IMDb+RottenTomatoes, fill= Platform),position = "dodge")+
labs(
x = "IMDb Rating + Rotten Tomatoes Rating",
y = "Movie Count",
title = "Total Ratings Of Movies Made by Different Platforms")
ggplot(movie_df) +
geom_bar(mapping=aes(x = IMDb+RottenTomatoes, fill= Platform),position = "dodge")+
labs(
x = "IMDb Rating + Rotten Tomatoes Rating",
y = "Movie Count",
title = "Total Ratings Of Movies Made by Different Platforms")
ggplot(filter(movie_df, Age!="")) +
geom_bar(mapping=aes(x = Platform, fill= Age),position = "dodge")
ggplot(movie_df) +
geom_point(mapping=aes(x = IMDb, y = RottenTomatoes) +
facet_wrap(~ Platform, nrow = 2)
ggplot(filter(movie_df, Year==2021)) +
geom_point(mapping=aes(x = IMDb, y = RottenTomatoes, color= Platform))
ggplot(movie_df) +
geom_point(mapping=aes(x = IMDb, y = RottenTomatoes, color= Platform))
movies <- read.csv("data/MoviesOnStreamingPlatforms_updated.csv")
movies$Platform="NotDetermined"
for (platformColumn in 8:11) {
for (i in 1:rowCount) {
if (movies[i,platformColumn]==1) {
movies[i,18]=colnames(movies[platformColumn])
}
}
}
rowCount <- nrow(movies)
for (platformColumn in 8:11) {
for (i in 1:rowCount) {
if (movies[i,platformColumn]==1) {
movies[i,18]=colnames(movies[platformColumn])
}
}
}
movies <- subset( movies, select = -Netflix )
movies <- subset( movies, select = -Hulu )
movies <- subset( movies, select = -Prime.Video )
movies <- subset( movies, select = -Disney. )
movies <- subset( movies, select = -X )
movies <- subset( movies, select = -Type )
movie_df <-as_tibble(select(movies, Title, Year, Age, IMDb, Rotten.Tomatoes, Platform, Genres, Country, Language, Runtime))
View(movies)
View(movies)
library(tidyverse)
movie_df <-as_tibble(select(movies, Title, Year, Age, IMDb, Rotten.Tomatoes, Platform, Genres, Country, Language, Runtime))
movie_df <- filter(movie_df, (IMDb!=''))
movie_df <- movie_df %>%
separate(IMDb, into = c("IMDb", "imdb_will_be_deleted"), sep = "/" , convert = TRUE)
movie_df <- filter(movie_df, (Rotten.Tomatoes!=''))
movie_df <- movie_df %>%
separate(Rotten.Tomatoes, into = c("Rotten.Tomatoes", "Rotten.Tomatoes_will_be_deleted") , sep = "/" , convert = TRUE)
movie_df <- subset( movie_df, select = - imdb_will_be_deleted )
movie_df <- subset( movie_df, select = - Rotten.Tomatoes_will_be_deleted )
ggplot(filter(movie_df, Age!="")) +
geom_bar(mapping=aes(x = Platform, fill= Age),position = "dodge")+
labs(
x = "Movie Platforms",
y = "Movie Counts",
title = "Age Restrictions Of Movies Made by Different Platforms")
ggplot(movie_df) +
geom_point(mapping=aes(x = IMDb, y = RottenTomatoes, color= Platform))+
labs(
x = "IMDb Ratings",
y = "Rotten Tomatoes Ratings",
title = "Ratings of Movies on Different Sites Made by Different Platforms")
View(movie_df)
ggplot(movie_df) +
geom_point(mapping=aes(x = IMDb, y = Rotten.Tomatoes, color= Platform))+
labs(
x = "IMDb Ratings",
y = "Rotten Tomatoes Ratings",
title = "Ratings of Movies on Different Sites Made by Different Platforms")
ggplot(filter(movie_df, Year==2021)) +
geom_point(mapping=aes(x = IMDb, y = Rotten.Tomatoes, color= Platform)) +
labs(
x = "IMDb Ratings",
y = "Rotten Tomatoes Ratings",
title = "Ratings of Movies on Different Sites Made by Different Platforms in 2021")
ggplot(movie_df) +
geom_point(mapping=aes(x = IMDb, y = Rotten.Tomatoes, color= Platform))+
labs(
x = "IMDb Ratings",
y = "Rotten Tomatoes Ratings",
title = "Ratings of Movies on Different Sites Made by Different Platforms")
library(tidyverse)
movies <- read.csv("data/MoviesOnStreamingPlatforms_updated.csv")
movies$Platform="NotDetermined"
rowCount <- nrow(movies)
for (platformColumn in 8:11) {
for (i in 1:rowCount) {
if (movies[i,platformColumn]==1) {
movies[i,18]=colnames(movies[platformColumn])
}
}
}
movies <- subset( movies, select = -Netflix )
movies <- subset( movies, select = -Hulu )
movies <- subset( movies, select = -Prime.Video )
movies <- subset( movies, select = -Disney. )
movies <- subset( movies, select = -X )
movies <- subset( movies, select = -Type )
movie_df <-as_tibble(select(movies, Title, Year, Age, IMDb, Rotten.Tomatoes, Platform, Genres, Country, Language, Runtime))
movie_df <- filter(movie_df, (IMDb!=''))
movie_df <- movie_df %>%
separate(IMDb, into = c("IMDb", "imdb_will_be_deleted"), sep = "/" , convert = TRUE)
movie_df <- filter(movie_df, (Rotten.Tomatoes!=''))
movie_df <- movie_df %>%
separate(Rotten.Tomatoes, into = c("Rotten.Tomatoes", "Rotten.Tomatoes_will_be_deleted") , sep = "/" , convert = TRUE)
movie_df <- subset( movie_df, select = - imdb_will_be_deleted )
movie_df <- subset( movie_df, select = - Rotten.Tomatoes_will_be_deleted )
movies
movies <- subset( movies, select = -Prime_Video )
movies <- subset( movies, select = -Disney )
movies <- subset( movies, select = -Index )
movies <- subset( movies, select = -Type )
movie_df <-as_tibble(select(movies, Title, Year, Age, IMDb, Rotten.Tomatoes, Platform, Genres, Country, Language, Runtime))
movie_df <- filter(movie_df, (IMDb!=''))
movie_df <- movie_df %>%
separate(IMDb, into = c("IMDb", "imdb_will_be_deleted"), sep = "/" , convert = TRUE)
movie_df <- filter(movie_df, (Rotten.Tomatoes!=''))
movie_df <- movie_df %>%
separate(Rotten.Tomatoes, into = c("Rotten.Tomatoes", "Rotten.Tomatoes_will_be_deleted") , sep = "/" , convert = TRUE)
movie_df <- subset( movie_df, select = - imdb_will_be_deleted )
movie_df <- subset( movie_df, select = - Rotten.Tomatoes_will_be_deleted )
view(movies)
View
View(movie_df)
ggplot(filter(movie_df, Age!="")) +
geom_bar(mapping=aes(x = Platform, fill= Age),position = "dodge")+
labs(
x = "Movie Platforms",
y = "Movie Counts",
title = "Age Restrictions Of Movies Made by Different Platforms")
View(movie_df)
ggplot(filter(movie_df, Platform == 'Disney')) +
geom_point(mapping=aes(x = IMDb, y = Rotten.Tomatoes, fill= Year))+
labs(
x = "IMDb",
y = "RottenTomatoes",
title = "Ratings Of Disney Movies Made in Different Years")
ggplot(filter(movie_df, Platform == 'Disney')) +
geom_point(mapping=aes(x = IMDb, y = Rotten.Tomatoes) colour= Year)+
labs(
x = "IMDb",
y = "RottenTomatoes",
title = "Ratings Of Disney Movies Made in Different Years")
ggplot(filter(movie_df, Platform == 'Disney')) +
geom_point(mapping=aes(x = IMDb, y = Rotten.Tomatoes), colour= Year)+
labs(
x = "IMDb",
y = "RottenTomatoes",
title = "Ratings Of Disney Movies Made in Different Years")
ggplot(filter(movie_df, Platform == 'Disney')) +
geom_point(mapping=aes(x = IMDb, y = Rotten.Tomatoes), colour= 'Year')+
labs(
x = "IMDb",
y = "RottenTomatoes",
title = "Ratings Of Disney Movies Made in Different Years")
ggplot(filter(movie_df, Platform == 'Disney')) +
geom_point(mapping=aes(x = IMDb, y = Rotten.Tomatoes, color= Year))+
labs(
x = "IMDb",
y = "RottenTomatoes",
title = "Ratings Of Disney Movies Made in Different Years")
platRating <- ggplot(filter(movie_df, Platform == 'Disney')) +
geom_point(mapping=aes(x = IMDb, y = Rotten.Tomatoes, color= Year))+
labs(
x = "IMDb",
y = "RottenTomatoes",
title = "Ratings Of Disney Movies Made in Different Years")
plotRating
platRating
platRating + geom_point(aes(colour = factor(cyl)), size = 4) +
geom_point(colour = "grey90", size = 1.5)
plotRating <- ggplot(filter(movie_df, Platform == 'Disney')) +
geom_point(mapping=aes(x = IMDb, y = Rotten.Tomatoes))+
labs(
x = "IMDb",
y = "RottenTomatoes",
title = "Ratings Of Disney Movies Made in Different Years")
View(platRating)
View(platRating)
delete(platRating)
plotRating + geom_point(aes(colour = factor(Year)), size = 4) +
geom_point(colour = "grey90", size = 1.5)
install.packages("wesanderson")
library(wesanderson)
plotRating+scale_color_manual(values=wes_palette(n=3, name="GrandBudapest"))
plotRating
plotRating+ scale_color_brewer(palette="Dark2")
plotRating <- ggplot(filter(movie_df, Platform == 'Disney')) +
geom_point(mapping=aes(x = IMDb, y = Rotten.Tomatoes, color= Year))+
labs(
x = "IMDb",
y = "RottenTomatoes",
title = "Ratings Of Disney Movies Made in Different Years")
plotRating+ scale_color_brewer(palette="Dark2")
moviesDisney <- filter(movie_df, Platform == 'Disney')
View(moviesDisney)
View(movies)
ggplot(moviesDisney, aes(x=IMDb, y=Rotten.Tomatoes)) + geom_point()
ggplot(filter(moviesDisney,Runtime>119), aes(x=IMDb, y=Rotten.Tomatoes)) + geom_point()
ggplot(moviesDisney, aes(x=IMDb, y=Runtime)) + geom_point()
ggplot(moviesDisney, aes(x=IMDb, y=Runtime))
ggplot(moviesDisney, aes(x=IMDb, y=Runtime)) + geom_point()
ggplot(filter(moviesDisney,Runtime>400), aes(x=IMDb, y=Runtime,colour = Title)) + geom_point()
ggplot(filter(moviesDisney,Runtime>400), aes(x=IMDb, y=Runtime,colour = Year)) + geom_point()
ggplot(moviesDisney, aes(x=IMDb, y=Rotten.Tomatoes)) +scale_color_gradientn(colours = rainbow(5))
ggplot(moviesDisney, aes(x=IMDb, y=Rotten.Tomatoes)) + geom_point()+scale_color_gradientn(colours = rainbow(5))
spDisney<-ggplot(moviesDisney, aes(x=IMDb, y=Rotten.Tomatoes, color=Year)) + geom_point()
spDisney
spDisney+scale_color_gradientn(colours = rainbow(5))
sp<-ggplot(movie_df, aes(x=IMDb, y=Rotten.Tomatoes, color=Year)) + geom_point()
sp+scale_color_gradientn(colours = rainbow(5))
sp<-ggplot(movie_df, aes(x=IMDb, y=Rotten.Tomatoes, color=Year)) + + geom_jitter()
sp<-ggplot(movie_df, aes(x=IMDb, y=Rotten.Tomatoes, color=Year)) + geom_jitter()
sp+scale_color_gradientn(colours = rainbow(5))
sp<-ggplot(filter(movie_df, Year<1980), aes(x=IMDb, y=Rotten.Tomatoes, color=Year)) + geom_jitter()
sp+scale_color_gradientn(colours = rainbow(5))
sp<-ggplot(filter(movie_df, Year>1980), aes(x=IMDb, y=Rotten.Tomatoes, color=Year)) + geom_jitter()
sp+scale_color_gradientn(colours = rainbow(5))
sp<-ggplot(filter(movie_df, Year>1980), aes(x=IMDb, y=Rotten.Tomatoes, color=Year)) + geom_jitter()+facet_wrap(~ Year, nrow = 2)
sp+scale_color_gradientn(colours = rainbow(5))
sp<-ggplot(filter(movie_df, Year>1980), aes(x=IMDb, y=Rotten.Tomatoes, color=Year)) + geom_jitter()+facet_wrap(~ Year, nrow = 6)
sp+scale_color_gradientn(colours = rainbow(5))
sp<-ggplot(filter(moviesDisney, Year>1980), aes(x=IMDb, y=Rotten.Tomatoes, color=Year)) + geom_jitter()+facet_wrap(~ Year, nrow = 6)
sp+scale_color_gradientn(colours = rainbow(5))
sp<-ggplot(movie_df, aes(x=IMDb, y=Rotten.Tomatoes, color=Year)) + geom_jitter()+facet_wrap(~ Year, nrow = 6)
sp<-ggplot(movie_df, aes(x=IMDb, y=Rotten.Tomatoes, color=Year)) + geom_jitter()+facet_wrap(~ Year, nrow = 8)
sp+scale_color_gradientn(colours = rainbow(5))
sp
sp+scale_color_gradientn(colours = rainbow(1))
sp+scale_color_gradientn(colours = rainbow(10))
sp+scale_color_gradientn(colours = rainbow(5))
sp+scale_color_gradientn(colours = rainbow(10))
sp<-ggplot(movie_df, aes(x=IMDb, y=Rotten.Tomatoes, color=Year, shape = platform)) + geom_jitter()+facet_wrap(~ Year, nrow = 6)
sp+scale_color_gradientn(colours = rainbow(10))
sp<-ggplot(movie_df, aes(x=IMDb, y=Rotten.Tomatoes, color=Year, shape = Platform)) + geom_jitter()+facet_wrap(~ Year, nrow = 6)
sp+scale_color_gradientn(colours = rainbow(10))
sp<-ggplot(movie_df, aes(x=IMDb, y=Rotten.Tomatoes, color=Year, shape = Platform, size = 1)) + geom_jitter()+facet_wrap(~ Year, nrow = 6)
sp+scale_color_gradientn(colours = rainbow(10))
sp<-ggplot(movie_df, aes(x=IMDb, y=Rotten.Tomatoes, color=Year, shape = Platform, size = 0.01)) + geom_jitter()+facet_wrap(~ Year, nrow = 6)
sp+scale_color_gradientn(colours = rainbow(10))
sp<-ggplot(movie_df, aes(x=IMDb, y=Rotten.Tomatoes, color=Year, shape = Platform)) + geom_jitter()+facet_wrap(~ Year, nrow = 6)
sp+scale_color_gradientn(colours = rainbow(10))
sp<-ggplot(movie_df, aes(x=IMDb, y=Rotten.Tomatoes, color=Year, shape = Platform)) + geom_jitter()+facet_wrap(~ Year, nrow = 6)+scale_color_gradientn(colours = rainbow(10))
sp
library(tidyverse)
movies <- read.csv("data/MoviesOnStreamingPlatforms_updated.csv")
movies$Platform="NotDetermined"
rowCount <- nrow(movies)
for (platformColumn in 8:11) {
for (i in 1:rowCount) {
if (movies[i,platformColumn]==1) {
movies[i,18]=colnames(movies[platformColumn])
}
}
}
movies <- subset( movies, select = -Netflix )
movies <- subset( movies, select = -Hulu )
movies <- subset( movies, select = -Prime.Video )
movies <- subset( movies, select = -Disney. )
movies <- subset( movies, select = -X )
View(movies)
movies <- subset( movies, select = -Index )
movies <- subset( movies, select = -Prime_Video )
movies <- subset( movies, select = -Disney )
movies <- subset( movies, select = -Type )
movie_df <-as_tibble(select(movies, Title, Year, Age, IMDb, Rotten.Tomatoes, Platform, Genres, Country, Language, Runtime))
movie_df <- filter(movie_df, (IMDb!=''))
movie_df <- movie_df %>%
separate(IMDb, into = c("IMDb", "imdb_will_be_deleted"), sep = "/" , convert = TRUE)
movie_df <- filter(movie_df, (Rotten.Tomatoes!=''))
movie_df <- movie_df %>%
separate(Rotten.Tomatoes, into = c("Rotten.Tomatoes", "Rotten.Tomatoes_will_be_deleted") , sep = "/" , convert = TRUE)
movie_df <- subset( movie_df, select = - imdb_will_be_deleted )
movie_df <- subset( movie_df, select = - Rotten.Tomatoes_will_be_deleted )
movies_ordered_acording_to_watchability <- movie_df %>%
+ mutate(watchability_ratings = IMDb(out of 10) + Rotten.Tomatoes (out of 100)) %>%
Error: unexpected symbol in:
"movies_ordered_acording_to_watchability <- movie_df %>%
mutate(watchability_ratings = IMDb(out of"
arrange(desc(watchability_ratings))
ggplot(filter(movie_df, Age!="")) +
geom_bar(mapping=aes(x = Platform, fill= Age),position = "dodge")+
labs(
x = "Movie Platforms",
y = "Movie Counts",
title = "Age Restrictions Of Movies Made by Different Platforms")
View(movie_df)
to_watch <- filter(movie_df, (Rotten.Tomatoes>80)&&(IMDb>8))
