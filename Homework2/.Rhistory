setwd("D:\Projects\Data Science and Analytics\R_Studio_Projects")
getwd()
View(priceLow)
movies <- read.csv("data/MoviesOnStreamingPlatforms_updated.csv")
head(movies)
movies <- read.csv("data/MoviesOnStreamingPlatforms_updated.csv")
getwd
getwdU)
getwd()
getwd()
movies <- read.csv("data/MoviesOnStreamingPlatforms_updated.csv")
movies <- read.csv("data/MoviesOnStreamingPlatforms_updated.csv")
head(movies)
library(tidyverse)
movies <- read.csv("data/MoviesOnStreamingPlatforms_updated.csv")
movies$Platform="NotDetermined"
rowCount <- nrow(movies)
for (platformColumn in 8:11) {
for (i in 1:rowCount) {
if (movies[i,platformColumn]==1) {
movies[i,18]=colnames(movies[platformColumn])
}
}
}
movies <- subset( movies, select = -Netflix )
movies <- subset( movies, select = -Hulu )
movies <- subset( movies, select = -Prime.Video )
movies <- subset( movies, select = -Disney. )
movies <- subset( movies, select = -X )
movies <- subset( movies, select = -Type )
movie_df <-as_tibble(select(movies, Title, Year, Age, IMDb, Rotten.Tomatoes, Platform, Genres, Country, Language, Runtime))
movie_df <- filter(movie_df, (IMDb!=''))
movie_df <- movie_df %>%
separate(IMDb, into = c("IMDb", "imdb_will_be_deleted"), sep = "/" , convert = TRUE)
movie_df <- filter(movie_df, (Rotten.Tomatoes!=''))
movie_df <- movie_df %>%
separate(Rotten.Tomatoes, into = c("Rotten.Tomatoes", "Rotten.Tomatoes_will_be_deleted") , sep = "/" , convert = TRUE)
movie_df <- subset( movie_df, select = - imdb_will_be_deleted )
movie_df <- subset( movie_df, select = - Rotten.Tomatoes_will_be_deleted )
View(movie_df)
library(ggplot2)
library(cowplot)
url <- "http://archive.ics.uci.edu/ml/machine-learning-databases/heart-disease/processed.cleveland.data"
data <- read.csv(url, header=FALSE)
View(movie_df)
View(movie_df)
View(movie_df)
View(movie_df)
head(data)
library(ggplot2)
library(cowplot)
url <- "http://archive.ics.uci.edu/ml/machine-learning-databases/heart-disease/processed.cleveland.data"
data <- read.csv(url, header=FALSE)
head(data)
colnames(data) <- c(
"age",
"sex",# 0 = female, 1 = male
"cp", # chest pain
# 1 = typical angina,
# 2 = atypical angina,
# 3 = non-anginal pain,
# 4 = asymptomatic
"trestbps", # resting blood pressure (in mm Hg)
"chol", # serum cholestoral in mg/dl
"fbs",  # fasting blood sugar if less than 120 mg/dl, 1 = TRUE, 0 = FALSE
"restecg", # resting electrocardiographic results
# 1 = normal
# 2 = having ST-T wave abnormality
# 3 = showing probable or definite left ventricular hypertrophy
"thalach", # maximum heart rate achieved
"exang",   # exercise induced angina, 1 = yes, 0 = no
"oldpeak", # ST depression induced by exercise relative to rest
"slope", # the slope of the peak exercise ST segment
# 1 = upsloping
# 2 = flat
# 3 = downsloping
"ca", # number of major vessels (0-3) colored by fluoroscopy
"thal", # this is short of thalium heart scan
# 3 = normal (no cold spots)
# 6 = fixed defect (cold spots during rest and exercise)
# 7 = reversible defect (when cold spots only appear during exercise)
"hd" # (the predicted attribute) - diagnosis of heart disease
# 0 if less than or equal to 50% diameter narrowing
# 1 if greater than 50% diameter narrowing
)
head(data)
str(data)
data[data==?] <- NA
data[data=="?"] <- NA
data[data$sex==0] <- "F"
data[data$sex==0]$sex <- "F"
data[data$sex==0,]$sex <- "F"
data[data$sex==1,]$sex <- "M"
data$sex <- as.factor(data$sex)
head(data)
str(data)
data$cp <- as.factor(data$cp)
data$fbs <- as.factor(data$fbs)
data$restecg <- as.factor(data$restecg)
data$exang <- as.factor(data$exang)
data$slope <- as.factor(data$slope)
str(data)
data$ca <- as.integer(data$ca)
data$ca <- as.factor(data$ca)
data$thal <- as.factor(data$thal)
data$thal <- as.integer(data$thal)
data$thal <- as.factor(data$thal)
data$hd <- ifelse(test=data$hd == 0, yes = "Healthy", no = "Unhealthy")
data$hd <- as.factor(data$hd)
str(data)
data <- data[!(is.na(data$ca) | is.na(data$thal)),]
nrow(data)
logistic <- glm(hd ~ sex, data = data, family = "binomial")
summary(logistic)
summary(melted_cormat)
library(ggplot2)
library(cowplot)
library('reshape2')
data <- read.csv("data/data.csv")
cormat <- cor(subset(subset( data, select = - X ),select = - diagnosis))
melted_cormat <- melt(cormat)
heatmap_Plot <- ggplot(melted_cormat, aes(x=Var1, y=Var2, fill=value))+
geom_tile()+
scale_fill_gradientn(colours = c("black", "#5c0042", "#990159", "red", "#fee1b3", "#fef0be"), values = c(0,0.1,0.2,0.4,0.8,1), name = "")+
theme(axis.text.x=element_text(angle=90,hjust=0.5,vjust=0.5))+
labs(
x = "",
y = "",
title = "Heatmap")
ggsave("heatmap.png",  width = 4000, height = 2500, units = "px")
library(ggplot2)
library(cowplot)
library('reshape2')
data <- read.csv("data/data.csv")
cormat <- cor(subset(subset( data, select = - X ),select = - diagnosis))
melted_cormat <- melt(cormat)
setwd(Desktop)
setwd(C:\Users\mehme\Desktop)
setwd("C:\Users\mehme\Desktop")
setwd("C:/Users/mehme/Desktop")
library(ggplot2)
library(cowplot)
library('reshape2')
data <- read.csv("data/data.csv")
cormat <- cor(subset(subset( data, select = - X ),select = - diagnosis))
melted_cormat <- melt(cormat)
heatmap_Plot <- ggplot(melted_cormat, aes(x=Var1, y=Var2, fill=value))+
geom_tile()+
scale_fill_gradientn(colours = c("black", "#5c0042", "#990159", "red", "#fee1b3", "#fef0be"), values = c(0,0.1,0.2,0.4,0.8,1), name = "")+
theme(axis.text.x=element_text(angle=90,hjust=0.5,vjust=0.5))+
labs(
x = "",
y = "",
title = "Heatmap")
ggsave("heatmap.png",  width = 4000, height = 2500, units = "px")
summary(melted_cormat)
summary(data)
data$diagnosis <- as.factor(data$diagnosis)
summary(data)
attach(data)
table(diagnosis)
guess <- glm(diagnosis~subset( data, select = - diagnosis ), family = "binomial")
guess <- glm(diagnosis ~ radius_mean + texture_mean , family = "binomial")
summary(guess)
View(melted_cormat)
View(cormat)
xtabs(~diagnosis+radius_mean,data=data)
xtabs(~diagnosis+radius_mean,data=data)
install.packages(caret)
install.packages(Amelia)
install.packages(e1071)
install.packages("caret)
install.packages("caret")
install.packages("caret")
install.packages("Amelia")
install.packages("e1071")
class(data)
set.seed(21)
library(caret)
library(Amelia)
library(e1071)
data <- createDataPartition(y=data$diagnosis,p=0.8,list = FALSE)
data <- read.csv("data/data.csv")
cormat <- cor(subset(subset( data, select = - X ),select = - diagnosis))
melted_cormat <- melt(cormat)
library(ggplot2)
library(cowplot)
library('reshape2')
library(caret)
library(Amelia)
library(e1071)
data <- read.csv("data/data.csv")
cormat <- cor(subset(subset( data, select = - X ),select = - diagnosis))
melted_cormat <- melt(cormat)
heatmap_Plot <- ggplot(melted_cormat, aes(x=Var1, y=Var2, fill=value))+
geom_tile()+
scale_fill_gradientn(colours = c("black", "#5c0042", "#990159", "red", "#fee1b3", "#fef0be"), values = c(0,0.1,0.2,0.4,0.8,1), name = "")+
theme(axis.text.x=element_text(angle=90,hjust=0.5,vjust=0.5))+
labs(
x = "",
y = "",
title = "Heatmap")
ggsave("heatmap.png",  width = 4000, height = 2500, units = "px")
set.seed(21)
partial_data <- createDataPartition(y=data$diagnosis,p=0.8,list = FALSE)
train_data <- data[partial_data,]
test_data <- data[-partial_data,]
model <- glm(diagnosis~.,data = train_data,family = "binomial")
data$diagnosis <- as.factor(data$diagnosis)
set.seed(21)
partial_data <- createDataPartition(y=data$diagnosis,p=0.8,list = FALSE)
train_data <- data[partial_data,]
test_data <- data[-partial_data,]
model <- glm(diagnosis~.,data = train_data,family = "binomial")
View(data)
data <- subset( data, select = - id )
data$diagnosis <- as.factor(data$diagnosis)
ggsave("heatmap.png",  width = 4000, height = 2500, units = "px")
set.seed(21)
partial_data <- createDataPartition(y=data$diagnosis,p=0.8,list = FALSE)
train_data <- data[partial_data,]
test_data <- data[-partial_data,]
model <- glm(diagnosis~.,data = train_data,family = "binomial")
View(logistic)
View(logistic)
data <- subset( data, select = - X )
data$diagnosis <- as.factor(data$diagnosis)
ggsave("heatmap.png",  width = 4000, height = 2500, units = "px")
set.seed(21)
partial_data <- createDataPartition(y=data$diagnosis,p=0.8,list = FALSE)
train_data <- data[partial_data,]
test_data <- data[-partial_data,]
model <- glm(diagnosis~.,data = train_data,family = "binomial")
pca <- prcomp(train_data[3:32],center = TRUE, scale = TRUE)
View(train_data)
pca <- prcomp(train_data[3:31],center = TRUE, scale = TRUE)
summary(pca)
pca_for_heatmap <- pca$x[1:6]
class(pca_for_heatmap)
View(pca_for_heatmap)
pca_for_heatmap <- as.data.frame(pca$x[1:6])
View(pca_for_heatmap)
pca_for_heatmap <- as.data.frame(pca$x[,1:6])
View(pca_for_heatmap)
summary(model)
library(ggplot2)
library(cowplot)
library(reshape2)
library(caret)
library(Amelia)
library(e1071)
data <- read.csv("data/data.csv")
cormat <- cor(subset(subset( data, select = - X ),select = - diagnosis))
melted_cormat <- melt(cormat)
heatmap_Plot <- ggplot(melted_cormat, aes(x=Var1, y=Var2, fill=value))+
geom_tile()+
scale_fill_gradientn(colours = c("black", "#5c0042", "#990159", "red", "#fee1b3", "#fef0be"), values = c(0,0.1,0.2,0.4,0.8,1), name = "")+
theme(axis.text.x=element_text(angle=90,hjust=0.5,vjust=0.5))+
labs(
x = "",
y = "",
title = "Heatmap")
data <- subset( data, select = - id )
data <- subset( data, select = - X )
data$diagnosis <- as.factor(data$diagnosis)
ggsave("heatmap.png",  width = 4000, height = 2500, units = "px")
set.seed(1)
partial_data <- createDataPartition(y=data$diagnosis,p=0.8,list = FALSE)
train_data <- data[partial_data,]
test_data <- data[-partial_data,]
model <- glm(diagnosis~.,data = train_data,family = "binomial")
pca <- prcomp(train_data[3:31],center = TRUE, scale = TRUE)
summary(pca)
pca_for_heatmap <- as.data.frame(pca$x[,1:6])
pca_cormat <- cor(pca_for_heatmap)
meltec_pca_cormat <- melt(pca_cormat)
pca_heatmap_Plot <- ggplot(meltec_pca_cormat, aes(x=Var1, y=Var2, fill=value))+
geom_tile()+
scale_fill_gradientn(colours = c("black", "#5c0042", "#990159", "red", "#fee1b3", "#fef0be"),values = c(0,0.1,0.2,0.4,0.8,1), name = "")+
theme(axis.text.x=element_text(angle=90,hjust=0.5,vjust=0.5))+
labs(x = "", y = "", title = "PCAHeatmap")
ggsave("PCAHeatmap.png",  width = 4000, height = 2500, units = "px")
summary(pca)
ggplot(meltec_pca_cormat, aes(x=Var1, y=Var2, fill=value))+
geom_tile()+
scale_fill_gradientn(colours = c("black", "#5c0042", "#990159", "red", "#fee1b3", "#fef0be"),values = c(0,0.1,0.2,0.4,0.8,1), name = "")+
theme(axis.text.x=element_text(angle=90,hjust=0.5,vjust=0.5))+
labs(x = "", y = "", title = "PCAHeatmap")
ggplot(melted_cormat, aes(x=Var1, y=Var2, fill=value))+
geom_tile()+
scale_fill_gradientn(colours = c("black", "#5c0042", "#990159", "red", "#fee1b3", "#fef0be"), values = c(0,0.1,0.2,0.4,0.8,1), name = "")+
theme(axis.text.x=element_text(angle=90,hjust=0.5,vjust=0.5))+
labs(
x = "",
y = "",
title = "Heatmap")
test_data$model_prob <- predict(model, test_data, type = "response")
View(test_data)
library(ggplot2)
library(cowplot)
library(reshape2)
library(caret)
library(Amelia)
library(e1071)
data <- read.csv("data/data.csv")
cormat <- cor(subset(subset( data, select = - X ),select = - diagnosis))
melted_cormat <- melt(cormat)
heatmap_Plot <- ggplot(melted_cormat, aes(x=Var1, y=Var2, fill=value))+
geom_tile()+
scale_fill_gradientn(colours = c("black", "#5c0042", "#990159", "red", "#fee1b3", "#fef0be"), values = c(0,0.1,0.2,0.4,0.8,1), name = "")+
theme(axis.text.x=element_text(angle=90,hjust=0.5,vjust=0.5))+
labs(
x = "",
y = "",
title = "Heatmap")
data <- subset( data, select = - id )
data <- subset( data, select = - X )
data$diagnosis <- as.factor(data$diagnosis)
ggsave("heatmap.png",  width = 4000, height = 2500, units = "px")
set.seed(1)
partial_data <- createDataPartition(y=data$diagnosis,p=0.8,list = FALSE)
train_data <- data[partial_data,]
test_data <- data[-partial_data,]
model <- glm(diagnosis~.,data = train_data,family = "binomial")
summary(model)
library(ggplot2)
library(cowplot)
library(reshape2)
library(caret)
library(Amelia)
library(e1071)
data <- read.csv("data/data.csv")
cormat <- cor(subset(subset( data, select = - X ),select = - diagnosis))
melted_cormat <- melt(cormat)
heatmap_Plot <- ggplot(melted_cormat, aes(x=Var1, y=Var2, fill=value))+
geom_tile()+
scale_fill_gradientn(colours = c("black", "#5c0042", "#990159", "red", "#fee1b3", "#fef0be"), values = c(0,0.1,0.2,0.4,0.8,1), name = "")+
theme(axis.text.x=element_text(angle=90,hjust=0.5,vjust=0.5))+
labs(x = "", y = "", title = "Heatmap")
ggsave("heatmap.png",  width = 4000, height = 2500, units = "px")
data <- subset( data, select = - id )
data <- subset( data, select = - X )
data$diagnosis <- as.factor(data$diagnosis)
set.seed(1)
partial_data <- createDataPartition(y=data$diagnosis,p=0.8,list = FALSE)
train_data <- data[partial_data,]
test_data <- data[-partial_data,]
model <- glm(diagnosis~.,data = train_data,family = "binomial")
summary(model)
prob <- predict(model , newdata = data.frame(test_data[,1:6]),type = "response")
pca <- prcomp(train_data[3:31],center = TRUE, scale = TRUE)
prob <- predict(pca , newdata = data.frame(test_data[,1:6]),type = "response")
prob <- predict(model , newdata = data.frame(test_data[,1:6]),type = "response")
prob <- predict(model , newdata = test_data,type = "response")
prob <- ifelse(prob>0 , "M", "B")
mean(test_data$diagnosis == prob)
prob <- predict(model , newdata = test_data)
prob <- ifelse(prob>0 , "M", "B")
mean(test_data$diagnosis == prob)
prob <- predict(model , newdata = test_data)
pred <- ifelse(prob>0 , "M", "B")
mean(test_data$diagnosis == pred)
confusionMatrix(test_data$diagnosis,as.factor(pred))
set.seed(2)
pca_for_heatmap$diagnosis <- data$diagnosis
View(data)
View(pca_for_heatmap)
View(data)
orijinal_data <- read.csv("data/data.csv")
pca_for_heatmap$diagnosis <- orijinal_data$diagnosis
label <- select(data,diagnosis)
library(ggplot2)
library(cowplot)
library(reshape2)
library(caret)
library(Amelia)
library(e1071)
library(tidyverse)
label <- select(data,diagnosis)
View(label)
pca_for_heatmap$diagnosis <- label$diagnosis
class(pca_for_heatmap)
class(label)
pca_for_heatmap$diagnosis <- label
pca <- prcomp(data[3:31],center = TRUE, scale = TRUE)
pca_for_heatmap <- as.data.frame(pca$x[,1:6])
set.seed(2)
pca_for_heatmap$diagnosis <- label$diagnosis
partial_pca_data <- createDataPartition(y=pca_for_heatmap$diagnosis,p=0.8,list = FALSE)
pca_train_data <- pca_for_heatmap[partial_pca_data,]
pca_test_data <- pca_for_heatmap[-partial_pca_data,]
pca_model <- glm(diagnosis~.,pca_for_heatmap = pca_train_data,family = "binomial")
pca_model <- glm(as.factor(diagnosis)~.,pca_for_heatmap = pca_train_data,family = "binomial")
pca_model <- glm(diagnosis~.,data = pca_train_data,family = "binomial")
pca_prob <- predict(pca_model , newdata = pca_test_data)
pca_pred <- ifelse(pca_prob>0 , "M", "B")
mean(pca_test_data$diagnosis == pca_pred)
confusionMatrix(pca_test_data$diagnosis,as.factor(pca_pred))
View(pca_train_data)
library(ggplot2)
library(cowplot)
library(reshape2)
library(caret)
library(Amelia)
library(e1071)
library(tidyverse)
data <- read.csv("data/data.csv")
label <- select(data,diagnosis)
cormat <- cor(subset(subset( data, select = - X ),select = - diagnosis))
melted_cormat <- melt(cormat)
heatmap_Plot <- ggplot(melted_cormat, aes(x=Var1, y=Var2, fill=value))+
geom_tile()+
scale_fill_gradientn(colours = c("black", "#5c0042", "#990159", "red", "#fee1b3", "#fef0be"), values = c(0,0.1,0.2,0.4,0.8,1), name = "")+
theme(axis.text.x=element_text(angle=90,hjust=0.5,vjust=0.5))+
labs(x = "", y = "", title = "Heatmap")
ggsave("heatmap.png",  width = 4000, height = 2500, units = "px")
############
data <- subset( data, select = - id )
data <- subset( data, select = - X )
data$diagnosis <- as.factor(data$diagnosis)
############
set.seed(1)
partial_data <- createDataPartition(y=data$diagnosis,p=0.8,list = FALSE)
train_data <- data[partial_data,]
test_data <- data[-partial_data,]
model <- glm(diagnosis~.,data = train_data,family = "binomial")
summary(model)
############
prob <- predict(model , newdata = test_data)
pred <- ifelse(prob>0 , "M", "B")
mean(test_data$diagnosis == pred)
confusionMatrix(test_data$diagnosis,as.factor(pred))
############
pca <- prcomp(data[3:31],center = TRUE, scale = TRUE)
summary(pca)
pca_for_heatmap <- as.data.frame(pca$x[,1:6])
pca_cormat <- cor(pca_for_heatmap)
meltec_pca_cormat <- melt(pca_cormat)
pca_heatmap_Plot <- ggplot(meltec_pca_cormat, aes(x=Var1, y=Var2, fill=value))+
geom_tile()+
scale_fill_gradientn(colours = c("black", "#5c0042", "#990159", "red", "#fee1b3", "#fef0be"),values = c(0,0.1,0.2,0.4,0.8,1), name = "")+
theme(axis.text.x=element_text(angle=90,hjust=0.5,vjust=0.5))+
labs(x = "", y = "", title = "PCAHeatmap")
ggsave("PCAHeatmap.png",  width = 4000, height = 2500, units = "px")
############
set.seed(2)
pca_for_heatmap$diagnosis <- label$diagnosis
partial_pca_data <- createDataPartition(y=pca_for_heatmap$diagnosis,p=0.8,list = FALSE)
pca_train_data <- pca_for_heatmap[partial_pca_data,]
pca_test_data <- pca_for_heatmap[-partial_pca_data,]
pca_model <- glm(diagnosis~.,data = pca_train_data,family = "binomial")
summary(pca_model)
############
pca_prob <- predict(pca_model , newdata = pca_test_data)
pca_pred <- ifelse(pca_prob>0 , "M", "B")
mean(pca_test_data$diagnosis == pca_pred)
confusionMatrix(pca_test_data$diagnosis,as.factor(pca_pred))
############
library(ggplot2)
library(ggplot2)
library(cowplot)
library(reshape2)
library(caret)
library(Amelia)
library(e1071)
library(tidyverse)
data <- read.csv("data/data.csv")
label <- select(data,diagnosis)
cormat <- cor(subset(subset( data, select = - X ),select = - diagnosis))
melted_cormat <- melt(cormat)
heatmap_Plot <- ggplot(melted_cormat, aes(x=Var1, y=Var2, fill=value))+
geom_tile()+
scale_fill_gradientn(colours = c("black", "#5c0042", "#990159", "red", "#fee1b3", "#fef0be"), values = c(0,0.1,0.2,0.4,0.8,1), name = "")+
theme(axis.text.x=element_text(angle=90,hjust=0.5,vjust=0.5))+
labs(x = "", y = "", title = "Heatmap")
ggsave("heatmap.png",  width = 4000, height = 2500, units = "px")
data <- subset( data, select = - id )
data <- subset( data, select = - X )
data$diagnosis <- as.factor(data$diagnosis)
set.seed(1)
partial_data <- createDataPartition(y=data$diagnosis,p=0.8,list = FALSE)
train_data <- data[partial_data,]
test_data <- data[-partial_data,]
model <- glm(diagnosis~.,data = train_data,family = "binomial")
summary(model)
prob <- predict(model , newdata = test_data)
pred <- ifelse(prob>0 , "M", "B")
mean(test_data$diagnosis == pred)
confusionMatrix(test_data$diagnosis,as.factor(pred))
pca <- prcomp(data[3:31],center = TRUE, scale = TRUE)
summary(pca)
pca_for_heatmap <- as.data.frame(pca$x[,1:6])
pca_cormat <- cor(pca_for_heatmap)
meltec_pca_cormat <- melt(pca_cormat)
pca_heatmap_Plot <- ggplot(meltec_pca_cormat, aes(x=Var1, y=Var2, fill=value))+
geom_tile()+
scale_fill_gradientn(colours = c("black", "#5c0042", "#990159", "red", "#fee1b3", "#fef0be"),values = c(0,0.1,0.2,0.4,0.8,1), name = "")+
theme(axis.text.x=element_text(angle=90,hjust=0.5,vjust=0.5))+
labs(x = "", y = "", title = "PCAHeatmap")
ggsave("PCAHeatmap.png",  width = 4000, height = 2500, units = "px")
set.seed(2)
pca_for_heatmap$diagnosis <- label$diagnosis
partial_pca_data <- createDataPartition(y=pca_for_heatmap$diagnosis,p=0.8,list = FALSE)
pca_train_data <- pca_for_heatmap[partial_pca_data,]
pca_test_data <- pca_for_heatmap[-partial_pca_data,]
pca_model <- glm(diagnosis~.,data = pca_train_data,family = "binomial")
summary(pca_model)
pca_prob <- predict(pca_model , newdata = pca_test_data)
pca_pred <- ifelse(pca_prob>0 , "M", "B")
mean(pca_test_data$diagnosis == pca_pred)
confusionMatrix(pca_test_data$diagnosis,as.factor(pca_pred))
pca_model <- glm(as.factor(diagnosis)~.,data = pca_train_data,family = "binomial")
