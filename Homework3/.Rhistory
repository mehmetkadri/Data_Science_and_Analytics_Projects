library(ggplot2)
library(dplyr)
library(dplyr)
library(factoextra)
library(ggplot2)
install.packages(factoextra)
install.packages("factoextra")
library(factoextra)
library(cluster)
View(iris)
ggplot(iris) +
geom_point(mapping=aes(x = Sepal.Length, y= Sepal.Width, fill = Species),position = "dodge")+
labs(
x = "Age Restrictions of Movies",
y = "Movie Counts",
title = "Age Restrictions Of Movies Made by Different Platforms")
ggplot(iris) +
geom_point(mapping=aes(x = Sepal.Length, y= Sepal.Width, fill = Species))+
labs(
x = "Age Restrictions of Movies",
y = "Movie Counts",
title = "Age Restrictions Of Movies Made by Different Platforms")
ggplot(iris) +
geom_point(mapping=aes(x = Sepal.Length, y= Sepal.Width, colour = Species))+
labs(
x = "Age Restrictions of Movies",
y = "Movie Counts",
title = "Age Restrictions Of Movies Made by Different Platforms")
ggplot(iris) +
geom_point(mapping=aes(x = Sepal.Length, y= Sepal.Width, colour = Species))+
labs(
x = "Sepal Length",
y = "Sepal Width",
title = "Sepal Width vs Sepal Length colored by Species")
pca <- prcomp(iris,center = TRUE, scale = TRUE)
pca <- prcomp(iris ,center = TRUE, scale = TRUE)
pca <- prcomp(iris[0:3] ,center = TRUE, scale = TRUE)
summary(pca)
View(pca)
str(iris)
data <- iris
str(data)
width_length <-ggplot(data) +
geom_point(mapping=aes(x = Sepal.Length, y= Sepal.Width, colour = Species))+
labs(
x = "Sepal Length",
y = "Sepal Width",
title = "Sepal Width vs Sepal Length colored by Species")
pca <- prcomp(data[1:4] ,center = TRUE, scale = TRUE)
summary(pca)
data_new <- as.data.frame(pca$x[,1:2])
data_new
data_pca <- as.data.frame(pca$x[,1:2])
library(ggplot2)
library(dplyr)
library(dplyr)
library(factoextra)
library(cluster)
data <- iris
str(data)
width_length <-ggplot(data) +
geom_point(mapping=aes(x = Sepal.Length, y= Sepal.Width, colour = Species))+
labs(
x = "Sepal Length",
y = "Sepal Width",
title = "Sepal Width vs Sepal Length colored by Species")
pca <- prcomp(data[1:4] ,center = TRUE, scale = TRUE)
summary(pca)
data_pca <- as.data.frame(pca$x[,1:2])
width_length
fviz_pca_ind(data_pca, geom.ind = "point", pointshape = 21,
pointsize = 2,
fill.ind = data$Species,
col.ind = "black",
palette = "jco",
addEllipses = TRUE,
label = "var",
col.var = "black",
repel = TRUE,
legend.title = "Species") +
ggtitle("2D PCA-plot for Iris Dataset") +
theme(plot.title = element_text(hjust = 0.5))
data_pca <- pca$x[,1:2]
fviz_pca_ind(data_pca, geom.ind = "point", pointshape = 21,
pointsize = 2,
fill.ind = data$Species,
col.ind = "black",
palette = "jco",
addEllipses = TRUE,
label = "var",
col.var = "black",
repel = TRUE,
legend.title = "Species") +
ggtitle("2D PCA-plot for Iris Dataset") +
theme(plot.title = element_text(hjust = 0.5))
pca <- prcomp(iris[1:4] ,center = TRUE, scale = TRUE)
summary(pca)
data_pca <- as.data.frame(pca$x[,1:2])
fviz_pca_ind(data_pca, geom.ind = "point", pointshape = 21,
pointsize = 2,
fill.ind = data$Species,
col.ind = "black",
palette = "jco",
addEllipses = TRUE,
label = "var",
col.var = "black",
repel = TRUE,
legend.title = "Species") +
ggtitle("2D PCA-plot for Iris Dataset") +
theme(plot.title = element_text(hjust = 0.5))
data_pca <- pca$x[,1:2]
fviz_pca_ind(data_pca, geom.ind = "point", pointshape = 21,
pointsize = 2,
fill.ind = data$Species,
col.ind = "black",
palette = "jco",
addEllipses = TRUE,
label = "var",
col.var = "black",
repel = TRUE,
legend.title = "Species") +
ggtitle("2D PCA-plot for Iris Data") +
theme(plot.title = element_text(hjust = 0.5))
width_length <-ggplot(data) +
geom_point(mapping=aes(x = Sepal.Length, y= Sepal.Width, colour = Species))+
labs(
x = "Sepal Length",
y = "Sepal Width",
title = "Sepal Width vs Sepal Length colored by Species")
width_length
pca <- prcomp(data[1:4] ,center = TRUE, scale = TRUE)
summary(pca)
data_pca <- as.data.frame(pca$x[,1:2])
fviz_pca_ind(data_pca, geom.ind = "point", pointshape = 21,
pointsize = 2,
fill.ind = data$Species,
col.ind = "black",
palette = "jco",
addEllipses = TRUE,
label = "var",
col.var = "black",
repel = TRUE,
legend.title = "Species") +
ggtitle("2D PCA-plot for Iris Data") +
theme(plot.title = element_text(hjust = 0.5))
data_pca <- prcomp(pca[1:2] ,center = TRUE, scale = TRUE)
pca <- prcomp(data[1:4] ,center = TRUE, scale = TRUE)
summary(pca)
pca <- as.data.frame(pca$x[,1:2])
data_pca <- prcomp(pca[1:2] ,center = TRUE, scale = TRUE)
fviz_pca_ind(data_pca, geom.ind = "point", pointshape = 21,
pointsize = 2,
fill.ind = data$Species,
col.ind = "black",
palette = "jco",
addEllipses = TRUE,
label = "var",
col.var = "black",
repel = TRUE,
legend.title = "Species") +
ggtitle("2D PCA-plot for Iris Data") +
theme(plot.title = element_text(hjust = 0.5))
pca <- prcomp(data[1:4] ,center = TRUE, scale = TRUE)
summary(pca)
data_pca <- as.data.frame(pca$x[,1:2])
fviz_pca_ind(data_pca, geom.ind = "point", pointshape = 21,
pointsize = 2,
fill.ind = data$Species,
col.ind = "black",
palette = "jco",
addEllipses = TRUE,
label = "var",
col.var = "black",
repel = TRUE,
legend.title = "Species") +
ggtitle("2D PCA-plot for Iris Data") +
theme(plot.title = element_text(hjust = 0.5))
fviz_pca_ind(pca, geom.ind = "point", pointshape = 21,
pointsize = 2,
fill.ind = data$Species,
col.ind = "black",
palette = "jco",
addEllipses = TRUE,
label = "var",
col.var = "black",
repel = TRUE,
legend.title = "Species") +
ggtitle("2D PCA-plot for Iris Data") +
theme(plot.title = element_text(hjust = 0.5))
str(pca)
data_pca <- as.list(pca$x[,1:2])
fviz_pca_ind(pca, geom.ind = "point", pointshape = 21,
pointsize = 2,
fill.ind = data$Species,
col.ind = "black",
palette = "jco",
addEllipses = TRUE,
label = "var",
col.var = "black",
repel = TRUE,
legend.title = "Species") +
ggtitle("2D PCA-plot for Iris Data") +
theme(plot.title = element_text(hjust = 0.5))
fviz_pca_ind(data_pca, geom.ind = "point", pointshape = 21,
pointsize = 2,
fill.ind = data$Species,
col.ind = "black",
palette = "jco",
addEllipses = TRUE,
label = "var",
col.var = "black",
repel = TRUE,
legend.title = "Species") +
ggtitle("2D PCA-plot for Iris Data") +
theme(plot.title = element_text(hjust = 0.5))
library(stats)
set.seed (102)
fviz_pca_ind(pca, geom.ind = "point", pointshape = 21,
pointsize = 2,
fill.ind = data$Species,
col.ind = "black",
palette = "jco",
addEllipses = TRUE,
label = "var",
col.var = "black",
repel = TRUE,
legend.title = "Species") +
ggtitle("2D PCA-plot for Iris Data") +
theme(plot.title = element_text(hjust = 0.5))
str(pca)
library(ggplot2)
library(dplyr)
library(factoextra)
library(cluster)
library(stats)
data <- iris
str(data)
width_length <-ggplot(data) +
geom_point(mapping=aes(x = Sepal.Length, y= Sepal.Width, colour = Species))+
labs(
x = "Sepal Length",
y = "Sepal Width",
title = "Sepal Width vs Sepal Length colored by Species")
width_length
pca <- prcomp(data[1:4] ,center = TRUE, scale = TRUE)
summary(pca)
str(pca)
fviz_pca_ind(pca, geom.ind = "point", pointshape = 21,
pointsize = 2,
fill.ind = data$Species,
col.ind = "black",
palette = "jco",
addEllipses = TRUE,
label = "var",
col.var = "black",
repel = TRUE,
legend.title = "Species") +
ggtitle("2D PCA-plot for Iris Data") +
theme(plot.title = element_text(hjust = 0.5))
set.seed (102)
clusters <- kmeans(data$x[,1:4], 3)
clusters <- kmeans(data$x, 3)
clusters <- kmeans(data_x, 3)
clusters <- kmeans(data_X, 3)
clusters <- kmeans(data$X, 3)
clusters <- kmeans(data$X[,1:4], 3)
clusters <- kmeans(data[1:4], 3)
clusters
str(clusters)
View(clusters)
cluster <- clusters$cluster
cluster
cluster <- replace(cluster==2,"setosa")
cluster <- replace(cluester, cluster==2,"setosa")
cluster <- replace(cluster, cluster==2,"setosa")
cluster
cluster <- replace(cluster, cluster==1,"virginica")
cluster <- replace(cluster, cluster==2,"setosa")
cluster <- replace(cluster, cluster==3,"versicolor")
cluster
comparison <- data.frame(cluster,data$Species)
comparison
prediction_of_species <- clusters$cluster
prediction_of_species <- replace(cluster, cluster==1,"virginica")
prediction_of_species <- replace(cluster, cluster==2,"setosa")
prediction_of_species <- replace(cluster, cluster==3,"versicolor")
true_species <- data$Species
comparison <- data.frame(prediction_of_species,true_species)
comparison
str(comparison)
comparison <- data.frame(as.factor(prediction_of_species),true_species)
str(comparison)
d <- dist(data, method = "euclidean")
hc1 <- hclust(d, method = "average" )
plot(hc1, cex = 0.6, hang = -1)
distance <- dist(data, method = "euclidean")
hierarchical_clustering <- hclust(distance, method = "average" )
hierarchical_clustered_data <- hclust(distance, method = "average" )
hierarchically_clustered_data <- hclust(distance, method = "average" )
plot(hierarchically_clustered_data, cex = 0.6, hang = -1)
clust <- cutree(hierarchically_clustered_data, k = 3)
plot(clust, cex = 0.6, hang = -1)
hierarchical_clustering <- hclust(distance, method = "average" )
plot(hierarchical_clustering, cex = 0.6, hang = -1)
hierarchically_clustered_data <- cutree(hierarchical_clustering, k = 3)
kmeans_prediction_of_species <- clusters$cluster
comparison1 <- data.frame(as.factor(kmeans_prediction_of_species),true_species)
comparison2 <- data.frame(as.factor(hierarchically_clustered_data_predictions),true_species)
comparison2 <- data.frame(as.factor(hierarchically_clustered_data_predictions),true_species)
hierarchically_clustered_data_predictions <- cutree(hierarchical_clustering, k = 3)
comparison2 <- data.frame(as.factor(hierarchically_clustered_data_predictions),true_species)
comparison2
comparison2 <- data.frame(hierarchically_clustered_data_predictions,true_species)
comparison2
kmeans_prediction_of_species <- replace(kmeans_prediction_of_species, kmeans_prediction_of_species==1,"virginica")
kmeans_prediction_of_species <- replace(kmeans_prediction_of_species, kmeans_prediction_of_species==2,"setosa")
kmeans_prediction_of_species <- replace(kmeans_prediction_of_species, kmeans_prediction_of_species==3,"versicolor")
true_species <- data$Species
comparison1 <- data.frame(as.factor(kmeans_prediction_of_species),true_species)
str(comparison)
distance <- dist(data, method = "euclidean")
hierarchical_clustering <- hclust(distance, method = "average" )
plot(hierarchical_clustering, cex = 0.6, hang = -1)
hierarchically_clustered_data_predictions <- cutree(hierarchical_clustering, k = 3)
hierarchically_clustered_data_predictions
hierarchically_clustered_data_predictions
hierarchically_clustered_data_predictions <- replace(hierarchically_clustered_data_predictions, cluster==1,"setosa")
hierarchically_clustered_data_predictions <- replace(hierarchically_clustered_data_predictions, cluster==2,"versicolor")
hierarchically_clustered_data_predictions <- replace(hierarchically_clustered_data_predictions, cluster==3,"virginica")
comparison2 <- data.frame(as.factor(hierarchically_clustered_data_predictions),true_species)
comparison2
hierarchically_clustered_data_predictions <- replace(hierarchically_clustered_data_predictions, hierarchically_clustered_data_predictions==1,"setosa")
hierarchically_clustered_data_predictions <- replace(hierarchically_clustered_data_predictions, hierarchically_clustered_data_predictions==2,"versicolor")
hierarchically_clustered_data_predictions <- replace(hierarchically_clustered_data_predictions, hierarchically_clustered_data_predictions==3,"virginica")
comparison2 <- data.frame(as.factor(hierarchically_clustered_data_predictions),true_species)
comparison2
str(data)
knitr::opts_chunk$set(echo = TRUE)
```{r imports, echo=False}
library(ggplot2)
library(dplyr)
library(factoextra)
library(cluster)
library(stats)
data <- iris
str(data)
```{r imports, include=FALSE}
hierarchical_clustering
View(hierarchical_clustering)
pca <- prcomp(data[1:4] ,center = TRUE, scale = TRUE)
summary(pca)
str(pca)
set.seed (102)
clusters <- kmeans(data[1:4], 3)
str(clusters)
library(ggplot2)
library(dplyr)
library(factoextra)
library(cluster)
library(stats)
data <- iris
str(data)
width_length <-ggplot(data) +
geom_point(mapping=aes(x = Sepal.Length, y= Sepal.Width, colour = Species))+
labs(
x = "Sepal Length",
y = "Sepal Width",
title = "Sepal Width vs Sepal Length colored by Species")
width_length
pca <- prcomp(data[1:4] ,center = TRUE, scale = TRUE)
summary(pca)
fviz_pca_ind(pca, geom.ind = "point", pointshape = 21,
pointsize = 2,
fill.ind = data$Species,
col.ind = "black",
palette = "jco",
addEllipses = TRUE,
label = "var",
col.var = "black",
repel = TRUE,
legend.title = "Species") +
ggtitle("2D PCA-plot for Iris Data") +
theme(plot.title = element_text(hjust = 0.5))
set.seed (102)
clusters <- kmeans(data[1:4], 3)
str(clusters)
kmeans_prediction_of_species <- clusters$cluster
kmeans_prediction_of_species <- replace(kmeans_prediction_of_species, kmeans_prediction_of_species==1,"virginica")
kmeans_prediction_of_species <- replace(kmeans_prediction_of_species, kmeans_prediction_of_species==2,"setosa")
kmeans_prediction_of_species <- replace(kmeans_prediction_of_species, kmeans_prediction_of_species==3,"versicolor")
true_species <- data$Species
comparison1 <- data.frame(as.factor(kmeans_prediction_of_species),true_species)
str(comparison)
distance <- dist(data, method = "euclidean")
hierarchical_clustering <- hclust(distance, method = "average" )
hierarchical_clustering
plot(hierarchical_clustering, cex = 0.6, hang = -1)
hierarchically_clustered_data_predictions <- cutree(hierarchical_clustering, k = 3)
hierarchically_clustered_data_predictions
hierarchically_clustered_data_predictions <- replace(hierarchically_clustered_data_predictions, hierarchically_clustered_data_predictions==1,"setosa")
hierarchically_clustered_data_predictions <- replace(hierarchically_clustered_data_predictions, hierarchically_clustered_data_predictions==2,"versicolor")
hierarchically_clustered_data_predictions <- replace(hierarchically_clustered_data_predictions, hierarchically_clustered_data_predictions==3,"virginica")
comparison2 <- data.frame(as.factor(hierarchically_clustered_data_predictions),true_species)
comparison2
